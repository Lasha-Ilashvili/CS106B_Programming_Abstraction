Prim-ის ალგორითმი დავწერე Kryskal-ის ნაცვლად. იდეა ისაა რომ ვიღებთ რენდომ კოორდინატებს წარმოსახვით გრიდში, 
ვეძებთ მის მეზობელ კოორდინატებს და პრიორიტეტების რიგში დამატებისას თითოეულს ვანიჭებთ რენდომ წონას. ასე და ამგვარად
მთლიან გრიდს მიმოვედებით და მხოლოდ საჭირო წიბოებს გავავლებთ. 

უპირატესობები და განსხვავებები: დაწერა უფრო მარტივი იყო რადგან ვიყენებ მხოლოდ ერთ ჰეშსეთს და მასში ვინახავ ყველა გამოყენებულ ლოკაციას. 
ასევე ნაკლებ ოპერაციასთან/მეხსიერების დაკავებასთან გვაქვს საქმე რადგან მხოლოდ იმ მეზობლებს ვამატებთ რიგში რომელიც ვალიდურია და გვჭირდება 
ლაბირინთის ასაგებად. 

იმედია სწორად დავწერე ალგორითმი შეზღუდული ცოდნის პირობებში.

პ.ს იმაზე მეცინება რომ თავიდან ასე ვწერდი დავალებას, მეთქი უფრო მარტივია ხოა ერთ სეთი ამდენი ძებნის და რეკურსიის გარეშე, 
უბრალოდ დარენდომებაში რომ შემექმნა პრობლემები (რადგან ყოველჯერზე მხოლოდ საწყისი წერტილიდან ვიწყებდი აგებას) თავი დავანებე. 
თუ ეს მართლაც სწორი ალგორითმია იმას ნიშნავს რომ თუნდაც არასრული ვარიანტი შემთხვევით მოვიფიქრე სამგორიდან ვარკეთილამდე 
მიმავალ მატარებელში და ცოტა არ იყოს გამიხარდება :დდდდდდდ